/// Generated by Flutter GetX Starter on 2022-10-14 00:05
import 'package:ejarkom/app/home/logic.dart';
import 'package:ejarkom/utils/widgets/auth_widgets.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';
import 'package:font_awesome_flutter/font_awesome_flutter.dart';
import 'package:get/get.dart';

import 'complete_data_logic.dart';
import 'complete_data_state.dart';

class CompleteDataView extends StatefulWidget {
  @override
  _CompleteDataViewState createState() => _CompleteDataViewState();

  CompleteDataView({this.way});

  String? way;
}

class _CompleteDataViewState extends State<CompleteDataView> {
  final CompleteDataLogic logic = Get.put(CompleteDataLogic());
  final CompleteDataState state = Get.find<CompleteDataLogic>().state;

  @override
  void dispose() {
    Get.delete<CompleteDataLogic>();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      resizeToAvoidBottomInset: false,
      appBar: AppBar(
        centerTitle: true,
        backgroundColor: Colors.white,
        elevation: 0,
        title: Text(
          'Informations'.tr,
          style: Get.textTheme.bodyText1!.copyWith(
            color: Get.theme.primaryColor,
          ),
        ),
        leading: IconButton(
          onPressed: () {
            Get.back();
          },
          icon: Icon(
            Icons.arrow_back_ios,
            color: Get.theme.primaryColor,
          ),
        ),
      ),
      body: SingleChildScrollView(
        child: SizedBox(
          height: Get.height,
          child: Padding(
            padding: EdgeInsets.only(
                left: 20.w, right: 20.w, top: 10.h, bottom: 40.h),
            child: GestureDetector(
              onTap: () {
                print('object');
                // FocusScope.of(context).unfocus();
                FocusScopeNode currentFocus = FocusScope.of(context);

                if (!currentFocus.hasPrimaryFocus) {
                  currentFocus.unfocus();
                }
              },
              child: Column(
                children: [
                  DataInput(
                    icon: Icon(FontAwesomeIcons.addressCard),
                    controller: state.address,
                    hint: 'Address'.tr,
                  ),
                  SizedBox(height: 10.h),
                  const Divider(color: Colors.black54),
                  SizedBox(height: 10.h),
                  Row(
                    children: [
                      Flexible(
                        flex: 8,
                        child: DataInput(
                          icon: Icon(FontAwesomeIcons.birthdayCake),
                          controller: state.dob,
                          hint: 'Date Of Birth "9-8-1990"'.tr,
                          type: 1,
                        ),
                      ),
                      Spacer(),
                      Flexible(
                        child: IconButton(
                          onPressed: () {
                            showCupertinoModalPopup(
                              context: context,
                              builder: (context) {
                                return Container(
                                  height: 500.h,
                                  decoration: BoxDecoration(
                                    color: Colors.white,
                                    borderRadius: BorderRadius.circular(20.sp),
                                  ),
                                  child: CupertinoDatePicker(
                                    onDateTimeChanged: (DateTime date) {
                                      print(date);
                                      state.dob.text =
                                          '${date.year}-${date.month}-${date.day}';
                                    },
                                    mode: CupertinoDatePickerMode.date,
                                    maximumYear: 2022,
                                  ),
                                );
                              },
                            );
                          },
                          icon: Icon(Icons.add),
                        ),
                      )
                    ],
                  ),
                  SizedBox(height: 10.h),
                  const Divider(color: Colors.black54),
                  SizedBox(height: 10.h),
                  Container(
                    width: Get.width,
                    height: 500.h,
                    decoration: BoxDecoration(
                      borderRadius: BorderRadius.circular(5.sp),
                      border: Border.all(color: Colors.grey),
                    ),
                    child: GetBuilder<CompleteDataLogic>(
                      id: 'photo',
                      builder: (logic) {
                        return state.image != null
                            ? Stack(
                                children: [
                                  Center(
                                    child: SizedBox(
                                      height: 500.h,
                                      width: Get.width,
                                      child: Stack(
                                        alignment: Alignment.center,
                                        children: [
                                          Image.file(
                                            state.image!,
                                          ),
                                          SizedBox(
                                            width: Get.width,
                                            child: Column(
                                              crossAxisAlignment:
                                                  CrossAxisAlignment.start,
                                              children: [
                                                IconButton(
                                                  onPressed: () {
                                                    logic.deleteImage(w: 'i');
                                                  },
                                                  icon: Icon(
                                                    Icons.delete,
                                                    color: Colors.black,
                                                    size: 30.sp,
                                                  ),
                                                ),
                                              ],
                                            ),
                                          )
                                        ],
                                      ),
                                    ),
                                  ),
                                ],
                              )
                            : Column(
                                mainAxisAlignment: MainAxisAlignment.center,
                                children: [
                                  IconButton(
                                    icon: Icon(Icons.add),
                                    onPressed: () {
                                      logic.getImages(w: 'i');
                                    },
                                  ),
                                  Text(
                                    'Your ID(Front)'.tr,
                                    style: Get.textTheme.bodyText1,
                                  )
                                ],
                              );
                      },
                    ),
                  ),
                  SizedBox(height: 10.h),
                  const Divider(color: Colors.black54),
                  SizedBox(height: 10.h),
                  Container(
                    width: Get.width,
                    height: 500.h,
                    decoration: BoxDecoration(
                      borderRadius: BorderRadius.circular(5.sp),
                      border: Border.all(color: Colors.grey),
                    ),
                    child: GetBuilder<CompleteDataLogic>(
                      id: 'Sphoto',
                      builder: (logic) {
                        return state.image != null
                            ? Stack(
                                children: [
                                  Center(
                                    child: SizedBox(
                                      height: 500.h,
                                      width: Get.width,
                                      child: Stack(
                                        alignment: Alignment.center,
                                        children: [
                                          Image.file(
                                            state.signatureImage!,
                                          ),
                                          SizedBox(
                                            width: Get.width,
                                            child: Column(
                                              crossAxisAlignment:
                                                  CrossAxisAlignment.start,
                                              children: [
                                                IconButton(
                                                  onPressed: () {
                                                    logic.deleteImage(w: 's');
                                                  },
                                                  icon: Icon(
                                                    Icons.delete,
                                                    color: Colors.black,
                                                    size: 30.sp,
                                                  ),
                                                ),
                                              ],
                                            ),
                                          )
                                        ],
                                      ),
                                    ),
                                  ),
                                ],
                              )
                            : Column(
                                mainAxisAlignment: MainAxisAlignment.center,
                                children: [
                                  IconButton(
                                    icon: Icon(Icons.add),
                                    onPressed: () {
                                      logic.getImages(w: 's');
                                    },
                                  ),
                                  Text(
                                    'Your Id(Back)'.tr,
                                    style: Get.textTheme.bodyText1,
                                  )
                                ],
                              );
                      },
                    ),
                  ),
                  SizedBox(height: 50.h),
                  // Spacer(),
                  ElevatedButton(
                    onPressed: () {
                      logic.addMethod();
                    },
                    style: ElevatedButton.styleFrom(
                      fixedSize: Size(Get.width, 120.h),
                    ),
                    child: Text(
                      'Complete'.tr,
                      style: Get.textTheme.button!.copyWith(
                        color: Colors.white,
                        fontSize: 40.sp,
                      ),
                    ),
                  )
                ],
              ),
            ),
          ),
        ),
      ),
    );
  }
}
