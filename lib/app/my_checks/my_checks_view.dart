/// Generated by Flutter GetX Starter on 2022-10-18 22:49
import 'package:ejarkom/utils/widgets/leading_button.dart';
import 'package:ejarkom/utils/widgets/my_indicator.dart';
import 'package:flutter/material.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';
import 'package:get/get.dart';

import 'my_checks_logic.dart';
import 'my_checks_state.dart';

class MyChecksView extends StatefulWidget {
  @override
  _MyChecksViewState createState() => _MyChecksViewState();
}

class _MyChecksViewState extends State<MyChecksView> {
  final MyChecksLogic logic = Get.put(MyChecksLogic());
  final MyChecksState state = Get.find<MyChecksLogic>().state;

  @override
  void dispose() {
    Get.delete<MyChecksLogic>();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        leading: LeadingButton(),
        title: Text(
          'Checkups'.tr,
          style: Get.textTheme.bodyText1!.copyWith(
            fontSize: 20.sp,
            color: Get.theme.primaryColor,
            fontWeight: FontWeight.bold,
          ),
        ),
        centerTitle: true,
        backgroundColor: Colors.white,
        elevation: 0,
      ),
      body: Container(
        decoration: const BoxDecoration(
          color: Colors.white,
          image: DecorationImage(
            image: AssetImage('assets/images/newb.png'),
            fit: BoxFit.fitHeight,
          ),
        ),
        height: Get.height,
        child: Obx(
          () => state.gettingState.value
              ? MyIndicator()
              : GetBuilder<MyChecksLogic>(builder: (logic) {
                  return Padding(
                    padding: EdgeInsets.symmetric(horizontal: 10.w),
                    child: state.checks.isEmpty
                        ? Center(
                            child: Text(
                              'you do not have any checks yet'.tr,
                              style: Get.textTheme.bodyText1!.copyWith(
                                fontSize: 19.sp,
                              ),
                            ),
                          )
                        : ListView.builder(
                            itemCount: state.checks.length,
                            itemBuilder: (BuildContext context, int index) {
                              return Padding(
                                padding: EdgeInsets.symmetric(vertical: 10.h),
                                child: Container(
                                  // height: 200.h,
                                  width: Get.width.w,
                                  decoration: BoxDecoration(
                                    borderRadius: BorderRadius.circular(5.sp),
                                    border: Border.all(color: Colors.grey),
                                  ),
                                  child: Padding(
                                    padding: EdgeInsets.symmetric(
                                      horizontal: 10.w,
                                      vertical: 10.h,
                                    ),
                                    child: Column(
                                      children: [
                                        Row(
                                          mainAxisAlignment:
                                              MainAxisAlignment.end,
                                          children: [
                                            getState(
                                                s: state.checks[index].stute!),
                                          ],
                                        ),
                                        SizedBox(height: 10.h),
                                        Row(
                                          mainAxisAlignment:
                                              MainAxisAlignment.spaceBetween,
                                          children: [
                                            Text(
                                              'Result:'.tr,
                                              style: Get.textTheme.bodyText1!
                                                  .copyWith(
                                                fontSize: 19.sp,
                                              ),
                                            ),
                                            Text(
                                              '{state.checks[index].mess!}',
                                              style: Get.textTheme.bodyText1,
                                            ),
                                          ],
                                        ),
                                        SizedBox(height: 10.h),

                                        // Row(
                                        //   mainAxisAlignment:
                                        //   MainAxisAlignment.spaceBetween,
                                        //   children: [
                                        //     ElevatedButton(
                                        //       onPressed: () {
                                        //         Get.dialog(
                                        //           MyActionDialog(type: 'reject'),
                                        //           barrierDismissible: false,
                                        //         );
                                        //       },
                                        //       child: Text(
                                        //         'Reject'.tr,
                                        //       ),
                                        //     ),
                                        //     ElevatedButton(
                                        //       onPressed: () {
                                        //         // logic.actionDialog(type: 'Accept');
                                        //         Get.dialog(
                                        //           MyActionDialog(type: 'Accept'),
                                        //           barrierDismissible: false,
                                        //         );
                                        //       },
                                        //       child: Text(
                                        //         'Accept'.tr,
                                        //       ),
                                        //     ),
                                        //   ],
                                        // )
                                      ],
                                    ),
                                  ),
                                ),
                              );
                            },
                          ),
                  );
                }),
        ),
      ),
    );
  }

  Widget getState({required String s}) {
    print(s);
    if (s == 'Waiting') {
      return Container(
        height: 40.h,
        width: 150.h,
        decoration: BoxDecoration(
            color: Colors.amber.withOpacity(0.6),
            borderRadius: BorderRadius.circular(8.sp)),
        child: Padding(
          padding: EdgeInsets.symmetric(horizontal: 10.w),
          child: Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              Text(
                'Waiting....'.tr,
                style: Get.theme.textTheme.bodyText1!.copyWith(
                  color: Colors.black38,
                  fontSize: 19.sp,
                ),
              ),
              const Icon(
                Icons.timer,
                color: Colors.black38,
              )
            ],
          ),
        ),
      );
    } else if (s == 'Accept') {
      return Container(
        height: 40.h,
        width: 150.h,
        decoration: BoxDecoration(
            color: Colors.green.withOpacity(0.6),
            borderRadius: BorderRadius.circular(8.sp)),
        child: Padding(
          padding: EdgeInsets.symmetric(horizontal: 10.w),
          child: Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              Text(
                'Accepted'.tr,
                style: Get.theme.textTheme.bodyText1!.copyWith(
                  color: Colors.white,
                  fontSize: 19.sp,
                ),
              ),
              Icon(
                Icons.check,
                color: Colors.white,
              )
            ],
          ),
        ),
      );
    } else {
      return Container(
        height: 40.h,
        width: 150.h,
        decoration: BoxDecoration(
            color: Colors.red.withOpacity(0.6),
            borderRadius: BorderRadius.circular(8.sp)),
        child: Padding(
          padding: EdgeInsets.symmetric(horizontal: 10.w),
          child: Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              Text(
                'Rejected'.tr,
                style: Get.theme.textTheme.bodyText1!.copyWith(
                  color: Colors.white,
                  fontSize: 19.sp,
                ),
              ),
              Icon(
                Icons.close,
                color: Colors.white,
              )
            ],
          ),
        ),
      );
    }
  }
}
