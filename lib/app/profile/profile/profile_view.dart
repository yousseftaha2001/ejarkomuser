/// Generated by Flutter GetX Starter on 2022-10-19 02:13
import 'package:ejarkom/utils/widgets/auth_widgets.dart';
import 'package:ejarkom/utils/widgets/leading_button.dart';
import 'package:ejarkom/utils/widgets/my_indicator.dart';
import 'package:flutter/material.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';
import 'package:font_awesome_flutter/font_awesome_flutter.dart';
import 'package:get/get.dart';

import 'profile_logic.dart';
import 'profile_state.dart';

class ProfileView extends StatefulWidget {
  @override
  _ProfileViewState createState() => _ProfileViewState();
}

class _ProfileViewState extends State<ProfileView> {
  final ProfileLogic logic = Get.put(ProfileLogic());
  final ProfileState state = Get.find<ProfileLogic>().state;

  @override
  void dispose() {
    Get.delete<ProfileLogic>();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      resizeToAvoidBottomInset: false,
      appBar: AppBar(
        leading: const LeadingButton(),
        title: Text(
          'Update Profile'.tr,
          style: Get.textTheme.bodyText1!.copyWith(
            fontSize: 20.sp,
            color: Get.theme.primaryColor,
            fontWeight: FontWeight.bold,
          ),
        ),
        centerTitle: true,
        backgroundColor: Colors.white,
        elevation: 0,
      ),
      body: Container(
        decoration: const BoxDecoration(
          color: Colors.white,
          image: DecorationImage(
            image: AssetImage('assets/images/newb.png'),
            fit: BoxFit.fitHeight,
          ),
        ),
        height: Get.height,
        child: Obx(
          () => state.gettingState.value
              ? const MyIndicator()
              : Padding(
                  padding:
                      EdgeInsets.symmetric(horizontal: 60.w, vertical: 30.h),
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    mainAxisAlignment: MainAxisAlignment.start,
                    children: [
                      SizedBox(height: 100.h),
                      DataInput(
                        icon: Icon(Icons.person),
                        controller: state.name,
                        hint: 'Name'.tr,
                        onC: (value) {
                          if (value == state.userData.name) {
                            state.isChanged.value = false;
                          } else {
                            state.isChanged.value = true;
                          }
                        },
                      ),
                      const Divider(color: Colors.black38),
                      DataInput(
                        icon: Icon(Icons.phone),
                        controller: state.phone,
                        hint: 'Phone'.tr,
                        onC: (value) {
                          if (value == state.userData.phone) {
                            state.isChanged.value = false;
                          } else {
                            state.isChanged.value = true;
                          }
                        },
                      ),
                      const Divider(color: Colors.black38),
                      DataInput(
                        icon: Icon(Icons.password),
                        controller: state.password,
                        hint: 'Password'.tr,
                        obs: true,
                        onC: (value) {
                          state.isChanged.value = true;
                        },
                      ),
                      Spacer(),
                      Obx(
                        () {
                          return state.updateState.value
                              ? const MyIndicator()
                              : Obx(() => ElevatedButton(
                                    onPressed: state.isChanged.value
                                        ? () {
                                            logic.updatePro();
                                          }
                                        : null,
                                    style: ElevatedButton.styleFrom(
                                      primary: Get.theme.primaryColor,
                                      fixedSize: Size(Get.width.w, 45.h),
                                      shape: RoundedRectangleBorder(
                                        borderRadius:
                                            BorderRadius.circular(8.sp),
                                      ),
                                    ),
                                    child: Text(
                                      'Update Profile'.tr,
                                      style: Get.textTheme.bodyText1!.copyWith(
                                        color: Colors.white,
                                        fontSize: 22.sp,
                                        fontWeight: FontWeight.bold,
                                      ),
                                    ),
                                  ));
                        },
                      ),
                    ],
                  ),
                ),
        ),
      ),
    );
  }
}
